{"version":3,"sources":["Service.js","table-renderers/SheetRenderer.js","table-renderers/RowRenderer.js","table-renderers/CellRenderer.js","App.js","index.js"],"names":["Service","getLatLon","address","appkey","axios","get","SheetRenderer","props","className","columns","react_default","a","createElement","map","column","style","width","key","label","children","RowRenderer","row","type","disabled","value","CellRenderer","cell","col","rest","attributesRenderer","selected","editing","updated","Object","objectWithoutProperties","attributes","title","assign","emptyGrids","App","_useState","useState","_useState2","slicedToArray","grid","setGrid","_useState3","_useState4","appKey","setAppKey","csvLink","useRef","renderLatLon","then","response","data","results","length","lat","geometry","location","lon","lng","objectSpread2","catch","error","csvData","rowData","colData","values","id","name","placeholder","onChange","e","target","handleAppkeyChange","Fragment","lib_default","sheetRenderer","table_renderers_SheetRenderer","rowRenderer","table_renderers_RowRenderer","cellRenderer","table_renderers_CellRenderer","onCellsChanged","changes","additions","tempGrid","forEach","valueRenderer","onClick","event","current","link","click","react_csv","filename","ref","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1330ebc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet baseGeoCodeURL = \"https://maps.googleapis.com/maps/api/geocode/json?key=\";\r\n\r\nexport default {\r\n\r\n    getLatLon(address, appkey) {\r\n     if(address){        \r\n        return axios.get(baseGeoCodeURL + appkey + \"&address=\" + address);\r\n     }\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nconst SheetRenderer = props => {\r\n  const { className, columns } = props;\r\n\r\n  return (\r\n    <table className={className}>\r\n      <thead className=\"data-header\">\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              className=\"cell\"\r\n              style={{ width: column.width }}\r\n              key={column.label}\r\n            >\r\n              {column.label}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"data-body\">{props.children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SheetRenderer;\r\n","import React from \"react\";\r\n\r\nconst RowRenderer = props => {\r\n  const { className, row } = props;\r\n  return (\r\n    <tr className={className}>\r\n      <td className=\"action-cell cell\">\r\n        <input type=\"text\" disabled value={row + 1} />\r\n      </td>\r\n      {props.children}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowRenderer;\r\n","import React from \"react\";\r\n\r\nconst CellRenderer = props => {\r\n  const {\r\n    cell,\r\n    row,\r\n    col,\r\n    columns,\r\n    attributesRenderer,\r\n    selected,\r\n    editing,\r\n    updated,\r\n    style,\r\n    ...rest\r\n  } = props;\r\n\r\n  // hey, how about some custom attributes on our cell?\r\n  const attributes = cell.attributes || {};\r\n  // ignore default style handed to us by the component and roll our own\r\n  attributes.style = { width: columns[col].width };\r\n  if (col === 0) {\r\n    attributes.title = cell.label;\r\n  }\r\n\r\n  return (\r\n    <td {...rest} {...attributes}>\r\n      {props.children}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default CellRenderer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport ReactDataSheet from \"react-datasheet\";\r\nimport Service from \"./Service\";\r\nimport { SheetRenderer, CellRenderer, RowRenderer } from \"./table-renderers\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst columns = [\r\n  { label: \"S.No.\", width: \"3%\" },\r\n  { label: \"Address\", width: \"40%\" },\r\n  { label: \"Latitude\", width: \"25%\" },\r\n  { label: \"Longitude\", width: \"25%\" }\r\n];\r\n\r\nconst emptyGrids = [\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }],\r\n  [{ value: \"\" }, { value: \"\" }, { value: \"\" }]\r\n];\r\n\r\nexport default function App() {\r\n  const [grid, setGrid] = useState(emptyGrids);\r\n\r\n  const [appKey, setAppKey] = useState(\"\");\r\n\r\n  const csvLink = useRef(null);\r\n\r\n  function handleCellsChanged(changes, additions) {\r\n    const tempGrid = grid.map(row => [...row]);\r\n\r\n    changes.forEach(({ cell, row, col, value }) => {\r\n      tempGrid[row][col] = { ...tempGrid[row][col], value };\r\n\r\n      if (value && col === 0) {\r\n        renderLatLon(value, tempGrid, row, col, cell);\r\n      } else {\r\n        if (col === 0) {\r\n          tempGrid[row][col] = { ...tempGrid[row][col], value };\r\n          tempGrid[row][col + 1] = { ...tempGrid[row][col + 1], value: \"\" };\r\n          tempGrid[row][col + 2] = { ...tempGrid[row][col + 2], value: \"\" };\r\n\r\n          setGrid(tempGrid);\r\n        }\r\n      }\r\n    });\r\n\r\n    // paste extended beyond end, so add a new row\r\n    additions &&\r\n      additions.forEach(({ cell, row, col, value }) => {\r\n        if (!tempGrid[row]) {\r\n          tempGrid[row] = [{ value: \"\" }, { value: \"\" }, { value: \"\" }];\r\n        }\r\n        if (tempGrid[row][col]) {\r\n          tempGrid[row][col] = { ...tempGrid[row][col], value };\r\n        }\r\n\r\n        if (value && col === 0) {\r\n          renderLatLon(value, tempGrid, row, col, cell);\r\n        }\r\n      });\r\n  }\r\n\r\n  function renderLatLon(value, grid, row, col, cell) {\r\n    Service.getLatLon(value, appKey)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        if (response && response.data) {\r\n          if (response.data.results && response.data.results.length) {\r\n            var lat = response.data.results[0].geometry.location.lat;\r\n            var lon = response.data.results[0].geometry.location.lng;\r\n            //console.log(lat, lon);\r\n            grid[row][col + 1] = { ...grid[row][col + 1], value: lat };\r\n            grid[row][col + 2] = { ...grid[row][col + 2], value: lon };\r\n          } else {\r\n            grid[row][col + 1] = { ...grid[row][col + 1], value: \"FAILED\" };\r\n            grid[row][col + 2] = { ...grid[row][col + 2], value: \"FAILED\" };\r\n          }\r\n        }\r\n\r\n        setGrid(grid);\r\n      })\r\n      .catch(function(error) {\r\n        //console.log(error);\r\n        grid[row][col + 1] = { ...grid[row][col + 1], value: \"FAILED\" };\r\n        grid[row][col + 2] = { ...grid[row][col + 2], value: \"FAILED\" };\r\n        setGrid(grid);\r\n      });\r\n  }\r\n\r\n  const downloadCSV = event => {\r\n    csvLink.current.link.click();\r\n  };\r\n\r\n  const handleAppkeyChange = e => {\r\n    setAppKey(e.target.value);\r\n  };\r\n\r\n  const csvData =\r\n    grid &&\r\n    grid.map(rowData => {\r\n      return (\r\n        rowData &&\r\n        rowData.map(colData => {\r\n          return Object.values(colData);\r\n        })\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"d-flex flex-column\">\r\n        <h3 className=\"text-center\">BATCH GEOCODING</h3>\r\n\r\n        <div className=\"d-flex flex-row flex-wrap justify-content-center m-3\">\r\n          <label className=\"mb-0 mr-3 align-self-center\">\r\n            Google Maps App Key\r\n          </label>\r\n          <input\r\n            id=\"appkey\"\r\n            name=\"appkey\"\r\n            className=\"appkey flex-grow-1\"\r\n            placeholder=\"App Key\"\r\n            onChange={e => handleAppkeyChange(e)}\r\n            value={appKey}\r\n            type=\"input\"\r\n          />\r\n        </div>\r\n\r\n        {appKey && (\r\n          <>\r\n            <ReactDataSheet\r\n              data={grid}\r\n              className=\"custom-sheet\"\r\n              sheetRenderer={props => (\r\n                <SheetRenderer columns={columns} {...props} />\r\n              )}\r\n              rowRenderer={props => (\r\n                <RowRenderer className=\"data-row\" {...props} />\r\n              )}\r\n              cellRenderer={props => (\r\n                <CellRenderer columns={columns} {...props} />\r\n              )}\r\n              onCellsChanged={handleCellsChanged}\r\n              valueRenderer={cell => cell.value}\r\n            />\r\n\r\n            <div className=\"d-flex flex-row justify-content-end mt-3\">\r\n              <button className=\"btn btn-success btn-sm\" onClick={downloadCSV}>\r\n                Download CSV\r\n              </button>\r\n            </div>\r\n\r\n            <CSVLink\r\n              data={csvData}\r\n              filename=\"data.csv\"\r\n              className=\"hidden\"\r\n              ref={csvLink}\r\n              target=\"_blank\"\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"react-datasheet/lib/react-datasheet.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}